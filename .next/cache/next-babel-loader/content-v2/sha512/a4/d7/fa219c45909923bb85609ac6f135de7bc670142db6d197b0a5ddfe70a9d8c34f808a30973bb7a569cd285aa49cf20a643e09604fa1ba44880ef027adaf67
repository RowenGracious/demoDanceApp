{"ast":null,"code":"export const required = value => {\n  if (typeof value !== 'undefined' && value !== '') return undefined;\n  return \"Required\";\n};\nexport const requiredArray = value => {\n  if (value && typeof value !== 'undefined' && value.length !== 0) return undefined;\n  return \"Required\";\n};\nexport const password = value => {\n  if (value && !/^(?=.*[A-Z])(?=(.*[\\d]))(?=(.*[\\W])).+$/i.test(value)) return 'Passwords must contain at least one upper case letter, one special character, and one number.';\n  return undefined;\n};\nexport const email = value => {\n  if (value && !/^.+@.+$/i.test(value)) return 'Invalid email address.';\n  return undefined;\n};","map":{"version":3,"sources":["/Users/rowengracious/DroneInsurance/my-test-app/src/utlis/validation.js"],"names":["required","value","undefined","requiredArray","length","password","test","email"],"mappings":"AAAA,OAAO,MAAMA,QAAQ,GAAIC,KAAD,IAAW;AACjC,MAAI,OAAOA,KAAP,KAAiB,WAAjB,IAAgCA,KAAK,KAAK,EAA9C,EAAkD,OAAOC,SAAP;AAClD,SAAO,UAAP;AACD,CAHM;AAKP,OAAO,MAAMC,aAAa,GAAIF,KAAD,IAAW;AACtC,MAAIA,KAAK,IAAI,OAAOA,KAAP,KAAiB,WAA1B,IAAyCA,KAAK,CAACG,MAAN,KAAiB,CAA9D,EAAiE,OAAOF,SAAP;AACjE,SAAO,UAAP;AACD,CAHM;AAKP,OAAO,MAAMG,QAAQ,GAAIJ,KAAD,IAAW;AACjC,MAAIA,KAAK,IAAI,CAAC,2CAA2CK,IAA3C,CAAgDL,KAAhD,CAAd,EAAsE,OAAO,+FAAP;AACtE,SAAOC,SAAP;AACD,CAHM;AAKP,OAAO,MAAMK,KAAK,GAAIN,KAAD,IAAW;AAC9B,MAAIA,KAAK,IAAI,CAAC,WAAWK,IAAX,CAAgBL,KAAhB,CAAd,EAAsC,OAAO,wBAAP;AACtC,SAAOC,SAAP;AACD,CAHM","sourcesContent":["export const required = (value) => {\n  if (typeof value !== 'undefined' && value !== '') return undefined;\n  return \"Required\";\n};\n\nexport const requiredArray = (value) => {\n  if (value && typeof value !== 'undefined' && value.length !== 0) return undefined;\n  return \"Required\";\n};\n\nexport const password = (value) => {\n  if (value && !/^(?=.*[A-Z])(?=(.*[\\d]))(?=(.*[\\W])).+$/i.test(value)) return 'Passwords must contain at least one upper case letter, one special character, and one number.'\n  return undefined;\n};\n\nexport const email = (value) => {\n  if (value && !/^.+@.+$/i.test(value)) return 'Invalid email address.'\n  return undefined;\n};\n"]},"metadata":{},"sourceType":"module"}