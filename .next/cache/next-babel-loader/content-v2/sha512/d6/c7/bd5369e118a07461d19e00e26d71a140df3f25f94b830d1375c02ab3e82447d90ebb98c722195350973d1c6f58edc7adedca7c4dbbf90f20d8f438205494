{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableFooter from '@material-ui/core/TableFooter';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport TablePaginationActions from '../Pagination/TablePaginationActions';\nvar useStyles2 = makeStyles({\n  table: {\n    minWidth: 500\n  }\n}); // Pagination using material design \n\nexport default function Pagination(_ref) {\n  _s();\n\n  var rows = _ref.rows;\n  var classes = useStyles2();\n\n  var _useState = useState(2),\n      _useState2 = _slicedToArray(_useState, 2),\n      page = _useState2[0],\n      setPage = _useState2[1];\n\n  var _useState3 = useState(5),\n      _useState4 = _slicedToArray(_useState3, 2),\n      rowsPerPage = _useState4[0],\n      setRowsPerPage = _useState4[1];\n\n  var emptyRows = rows && rowsPerPage - Math.min(rowsPerPage, rows.length - page * rowsPerPage);\n\n  var handleChangePage = function handleChangePage(event, newPage) {\n    setPage(newPage);\n  };\n\n  var handleChangeRowsPerPage = function handleChangeRowsPerPage(event) {\n    setRowsPerPage(parseInt(event.target.value, 5));\n    setPage(0);\n  };\n\n  return /*#__PURE__*/React.createElement(TableContainer, {\n    component: Paper\n  }, /*#__PURE__*/React.createElement(Table, {\n    className: classes.table,\n    \"aria-label\": \"custom pagination table\"\n  }, /*#__PURE__*/React.createElement(TableBody, null, /*#__PURE__*/React.createElement(TableRow, null, /*#__PURE__*/React.createElement(TableCell, {\n    component: \"th\",\n    scope: \"row\"\n  }, \"Profile Image\"), /*#__PURE__*/React.createElement(TableCell, {\n    component: \"th\",\n    scope: \"row\"\n  }, \"Full Name\"), /*#__PURE__*/React.createElement(TableCell, {\n    component: \"th\",\n    scope: \"row\",\n    align: \"center\"\n  }, \"Age\")), (rowsPerPage > 0 ? rows.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage) : rows).map(function (row) {\n    return /*#__PURE__*/React.createElement(TableRow, {\n      key: row.id\n    }, /*#__PURE__*/React.createElement(TableCell, {\n      style: {\n        width: '50%'\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      src: row.picture.large\n    })), /*#__PURE__*/React.createElement(TableCell, {\n      style: {\n        width: '25%'\n      },\n      align: \"left\"\n    }, row.name.title, \" \", row.name.first, \" \", row.name.last), /*#__PURE__*/React.createElement(TableCell, {\n      style: {\n        width: '25%'\n      },\n      align: \"center\"\n    }, row.registered.age));\n  }), emptyRows > 0 && /*#__PURE__*/React.createElement(TableRow, {\n    style: {\n      height: 53 * emptyRows\n    }\n  }, /*#__PURE__*/React.createElement(TableCell, {\n    colSpan: 6\n  }))), /*#__PURE__*/React.createElement(TableFooter, null, /*#__PURE__*/React.createElement(TableRow, null, /*#__PURE__*/React.createElement(TablePagination, {\n    rowsPerPageOptions: [5, 10, 25, {\n      label: 'All',\n      value: -1\n    }],\n    colSpan: 3,\n    count: rows.length,\n    rowsPerPage: rowsPerPage,\n    page: page,\n    SelectProps: {\n      inputProps: {\n        'aria-label': 'rows per page'\n      },\n      \"native\": true\n    },\n    onChangePage: handleChangePage,\n    onChangeRowsPerPage: handleChangeRowsPerPage,\n    ActionsComponent: TablePaginationActions\n  })))));\n}\n\n_s(Pagination, \"tWbW8b92nfozmzloxT4uHO0PDFU=\", false, function () {\n  return [useStyles2];\n});\n\n_c = Pagination;\n\nvar _c;\n\n$RefreshReg$(_c, \"Pagination\");","map":{"version":3,"sources":["/Users/rowengracious/DroneInsurance/my-test-app/src/components/common/Pagination/Pagination.js"],"names":["React","useState","makeStyles","Table","TableBody","TableCell","TableContainer","TableFooter","TablePagination","TableRow","Paper","TablePaginationActions","useStyles2","table","minWidth","Pagination","rows","classes","page","setPage","rowsPerPage","setRowsPerPage","emptyRows","Math","min","length","handleChangePage","event","newPage","handleChangeRowsPerPage","parseInt","target","value","slice","map","row","id","width","picture","large","name","title","first","last","registered","age","height","label","inputProps"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableFooter from '@material-ui/core/TableFooter';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport TablePaginationActions from '../Pagination/TablePaginationActions'\n\nconst useStyles2 = makeStyles({\n  table: {\n    minWidth: 500,\n  },\n});\n\n// Pagination using material design \nexport default function Pagination({rows}) {\n  const classes = useStyles2();\n  const [page, setPage] = useState(2);\n  const [rowsPerPage, setRowsPerPage] = useState(5);\n\n  const emptyRows = rows && rowsPerPage - Math.min(rowsPerPage, rows.length - page * rowsPerPage);\n\n  const handleChangePage = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  const handleChangeRowsPerPage = (event) => {\n    setRowsPerPage(parseInt(event.target.value, 5));\n    setPage(0);\n  };\n\n  return (\n    <TableContainer component={Paper}>\n      <Table className={classes.table} aria-label=\"custom pagination table\">\n        <TableBody>\n          <TableRow>\n            <TableCell component=\"th\" scope=\"row\">\n              Profile Image\n            </TableCell>\n            <TableCell component=\"th\" scope=\"row\">\n              Full Name\n            </TableCell>\n            <TableCell component=\"th\" scope=\"row\" align=\"center\">\n              Age\n            </TableCell>\n          </TableRow>\n          {(rowsPerPage > 0\n            ? rows.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\n            : rows\n          ).map((row) => (\n              <TableRow key={row.id}>\n                <TableCell style={{ width: '50%' }}>\n                  <img src={row.picture.large} />\n                </TableCell>\n                <TableCell style={{ width: '25%' }} align=\"left\">\n                  {row.name.title} {row.name.first} {row.name.last}\n                </TableCell>\n                <TableCell style={{ width: '25%' }} align=\"center\">\n                  {row.registered.age}\n                </TableCell>\n              </TableRow>\n          ))}\n\n          {emptyRows > 0 && (\n            <TableRow style={{ height: 53 * emptyRows }}>\n              <TableCell colSpan={6} />\n            </TableRow>\n          )}\n        </TableBody>\n        <TableFooter>\n          <TableRow>\n            <TablePagination\n                rowsPerPageOptions={[5, 10, 25, { label: 'All', value: -1 }]}\n                colSpan={3}\n                count={rows.length}\n                rowsPerPage={rowsPerPage}\n                page={page}\n                SelectProps={{\n                  inputProps: { 'aria-label': 'rows per page' },\n                  native: true,\n                }}\n                onChangePage={handleChangePage}\n                onChangeRowsPerPage={handleChangeRowsPerPage}\n                ActionsComponent={TablePaginationActions}\n              />\n          </TableRow>\n        </TableFooter>\n      </Table>\n    </TableContainer>\n  )\n}"]},"metadata":{},"sourceType":"module"}