{"ast":null,"code":"import _defineProperty from \"/Users/rowengracious/DroneInsurance/my-test-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/rowengracious/DroneInsurance/my-test-app/src/components/common/InputText/InputText.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React from 'react';\nimport { useFormContext } from 'react-hook-form';\nimport * as Util from '../../../utlis/utils';\n\nvar InputText = function InputText(_ref) {\n  _s();\n\n  var type = _ref.type,\n      label = _ref.label,\n      name = _ref.name,\n      validate = _ref.validate;\n  var methods = useFormContext();\n  var register = methods.register,\n      errors = methods.formState.errors;\n  console.log(errors);\n  var inputValidations = validate ? {\n    validate: Util.mapValidationsToObject(validate)\n  } : {};\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"grid grid-cols-1 gap-3\",\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: name,\n      children: [\" \", label, \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 7\n    }, _this), /*#__PURE__*/_jsxDEV(\"input\", _objectSpread({\n      className: \"border-2 h-10 p-2\",\n      id: name,\n      name: name,\n      type: type\n    }, register(name, {\n      validate: {\n        required: function required(value) {\n          return parseFloat(value) > 0;\n        }\n      }\n    })), void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 7\n    }, _this), console.log(errors)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 5\n  }, _this);\n};\n\n_s(InputText, \"u7sAMcQCpiWJQxXuJ6yWLOYZ4cg=\", false, function () {\n  return [useFormContext];\n});\n\n_c = InputText;\nexport default InputText;\n\nvar _c;\n\n$RefreshReg$(_c, \"InputText\");","map":{"version":3,"sources":["/Users/rowengracious/DroneInsurance/my-test-app/src/components/common/InputText/InputText.js"],"names":["React","useFormContext","Util","InputText","type","label","name","validate","methods","register","errors","formState","console","log","inputValidations","mapValidationsToObject","required","value","parseFloat"],"mappings":";;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,cAAT,QAA+B,iBAA/B;AACA,OAAO,KAAKC,IAAZ,MAAsB,sBAAtB;;AAEA,IAAMC,SAAS,GAAG,SAAZA,SAAY,OAAmC;AAAA;;AAAA,MAAjCC,IAAiC,QAAjCA,IAAiC;AAAA,MAA3BC,KAA2B,QAA3BA,KAA2B;AAAA,MAApBC,IAAoB,QAApBA,IAAoB;AAAA,MAAdC,QAAc,QAAdA,QAAc;AACnD,MAAMC,OAAO,GAAGP,cAAc,EAA9B;AADmD,MAE3CQ,QAF2C,GAEPD,OAFO,CAE3CC,QAF2C;AAAA,MAEpBC,MAFoB,GAEPF,OAFO,CAEjCG,SAFiC,CAEpBD,MAFoB;AAGnDE,EAAAA,OAAO,CAACC,GAAR,CAAYH,MAAZ;AACA,MAAMI,gBAAgB,GAAGP,QAAQ,GAAG;AAAEA,IAAAA,QAAQ,EAAEL,IAAI,CAACa,sBAAL,CAA4BR,QAA5B;AAAZ,GAAH,GAAyD,EAA1F;AAEA,sBACE;AAAK,IAAA,SAAS,EAAC,wBAAf;AAAA,4BACE;AAAO,MAAA,OAAO,EAAED,IAAhB;AAAA,sBAAwBD,KAAxB;AAAA;AAAA;AAAA;AAAA;AAAA,aADF,eAEE;AACE,MAAA,SAAS,EAAC,mBADZ;AAEE,MAAA,EAAE,EAAEC,IAFN;AAGE,MAAA,IAAI,EAAEA,IAHR;AAIE,MAAA,IAAI,EAAEF;AAJR,OAKMK,QAAQ,CAACH,IAAD,EAAM;AAChBC,MAAAA,QAAQ,EAAE;AACRS,QAAAA,QAAQ,EAAE,kBAACC,KAAD;AAAA,iBAAWC,UAAU,CAACD,KAAD,CAAV,GAAoB,CAA/B;AAAA;AADF;AADM,KAAN,CALd;AAAA;AAAA;AAAA;AAAA,aAFF,EAaGL,OAAO,CAACC,GAAR,CAAYH,MAAZ,CAbH;AAAA;AAAA;AAAA;AAAA;AAAA,WADF;AAkBD,CAxBD;;GAAMP,S;UACYF,c;;;KADZE,S;AA0BN,eAAeA,SAAf","sourcesContent":["import React from 'react';\nimport { useFormContext } from 'react-hook-form';\nimport * as Util from '../../../utlis/utils';\n\nconst InputText = ({type, label, name, validate}) => {\n  const methods = useFormContext();\n  const { register, formState: { errors } } = methods;\n  console.log(errors)\n  const inputValidations = validate ? { validate: Util.mapValidationsToObject(validate) } : {}\n\n  return (\n    <div className=\"grid grid-cols-1 gap-3\">\n      <label htmlFor={name}> {label} </label>\n      <input\n        className=\"border-2 h-10 p-2\"\n        id={name} \n        name={name} \n        type={type}\n        {...register(name,{\n          validate: {\n            required: (value) => parseFloat(value) > 0\n          }\n        })} \n      />\n      {console.log(errors)}\n      {/* {errors.email && <span role=\"alert\">{errors.message}</span>} */}\n    </div>\n  )\n}\n\nexport default InputText\n"]},"metadata":{},"sourceType":"module"}