{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useForm, FormProvider } from 'react-hook-form';\nimport { useRouter } from 'next/router';\nimport InputText from '../common/InputText/InputText';\nimport PrimaryButton from '../common/Button/PrimaryButton';\nimport { userData } from '../../utlis/utils';\n\nvar LoginForm = function LoginForm() {\n  _s();\n\n  var methods = useForm();\n  var router = useRouter();\n\n  var onSubmit = function onSubmit(data) {\n    //comparing the Form login information with hardcoded user information\n    debugger;\n\n    if (userData.emailId.toLowerCase() === data.emailID && userData.password === data.password) {\n      //IF true set the localstorage token\n      localStorage.setItem('accessToken', Math.random().toString(36));\n      return router.push('/dashboard');\n    } else {\n      alert(\"Login details incorrect\");\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(FormProvider, methods, /*#__PURE__*/React.createElement(\"form\", {\n    className: \"mx-auto self-center md:w-4/6 w-full p-20 grid grid-cols-1 gap-8 rounded overflow-hidden border-4 border-light-blue-500 border-opacity-25 shadow-lg\",\n    onSubmit: methods.handleSubmit(onSubmit)\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    className: \"mx-auto uppercase text-purple-500 font-bold\"\n  }, \" Haligonia Dance Academy \"), /*#__PURE__*/React.createElement(\"h2\", null, \" Enter Login Information: \"), /*#__PURE__*/React.createElement(InputText, {\n    type: \"text\",\n    label: \"Enter your Email ID\",\n    name: \"emailID\",\n    required: \"required\",\n    pattern: {\n      value: /\\S+@\\S+.\\S+/,\n      message: \"Entered value does not match email format\"\n    }\n  }), /*#__PURE__*/React.createElement(InputText, {\n    type: \"password\",\n    label: \"Enter your Password\",\n    name: \"password\",\n    required: \"required\",\n    minLength: {\n      value: 5,\n      message: \"min length is 5\"\n    }\n  }), /*#__PURE__*/React.createElement(PrimaryButton, {\n    type: \"submit\"\n  }, \" Continue \")));\n};\n\n_s(LoginForm, \"+BwhCX4tRRIaHVwaKE58pm9jD6w=\", false, function () {\n  return [useForm, useRouter];\n});\n\n_c = LoginForm;\nexport default LoginForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"LoginForm\");","map":{"version":3,"sources":["/Users/rowengracious/DroneInsurance/my-test-app/src/components/LoginForm/LoginForm.js"],"names":["React","useForm","FormProvider","useRouter","InputText","PrimaryButton","userData","LoginForm","methods","router","onSubmit","data","emailId","toLowerCase","emailID","password","localStorage","setItem","Math","random","toString","push","alert","handleSubmit","value","message"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,EAAkBC,YAAlB,QAAsC,iBAAtC;AACA,SAASC,SAAT,QAA0B,aAA1B;AAEA,OAAOC,SAAP,MAAsB,+BAAtB;AACA,OAAOC,aAAP,MAA0B,gCAA1B;AAEA,SAASC,QAAT,QAAyB,mBAAzB;;AAEA,IAAMC,SAAS,GAAG,SAAZA,SAAY,GAAM;AAAA;;AACtB,MAAMC,OAAO,GAAGP,OAAO,EAAvB;AACA,MAAMQ,MAAM,GAAGN,SAAS,EAAxB;;AAEA,MAAMO,QAAQ,GAAG,SAAXA,QAAW,CAACC,IAAD,EAAU;AACzB;AACA;;AACA,QAAGL,QAAQ,CAACM,OAAT,CAAiBC,WAAjB,OAAmCF,IAAI,CAACG,OAAxC,IAAmDR,QAAQ,CAACS,QAAT,KAAsBJ,IAAI,CAACI,QAAjF,EAA2F;AACzF;AACAC,MAAAA,YAAY,CAACC,OAAb,CAAqB,aAArB,EAAoCC,IAAI,CAACC,MAAL,GAAcC,QAAd,CAAuB,EAAvB,CAApC;AACA,aAAOX,MAAM,CAACY,IAAP,CAAY,YAAZ,CAAP;AACD,KAJD,MAIO;AACLC,MAAAA,KAAK,CAAC,yBAAD,CAAL;AACD;AACF,GAVD;;AAYA,sBACE,oBAAC,YAAD,EAAkBd,OAAlB,eACE;AAAM,IAAA,SAAS,EAAC,oJAAhB;AAAqK,IAAA,QAAQ,EAAEA,OAAO,CAACe,YAAR,CAAqBb,QAArB;AAA/K,kBACA;AAAI,IAAA,SAAS,EAAC;AAAd,iCADA,eAEE,6DAFF,eAGE,oBAAC,SAAD;AACE,IAAA,IAAI,EAAC,MADP;AAEE,IAAA,KAAK,EAAC,qBAFR;AAGE,IAAA,IAAI,EAAC,SAHP;AAIE,IAAA,QAAQ,EAAC,UAJX;AAKE,IAAA,OAAO,EAAE;AACPc,MAAAA,KAAK,EAAE,aADA;AAEPC,MAAAA,OAAO,EAAE;AAFF;AALX,IAHF,eAaE,oBAAC,SAAD;AACE,IAAA,IAAI,EAAC,UADP;AAEE,IAAA,KAAK,EAAC,qBAFR;AAGE,IAAA,IAAI,EAAC,UAHP;AAIE,IAAA,QAAQ,EAAC,UAJX;AAKE,IAAA,SAAS,EAAG;AACVD,MAAAA,KAAK,EAAE,CADG;AAEVC,MAAAA,OAAO,EAAE;AAFC;AALd,IAbF,eAuBE,oBAAC,aAAD;AAAe,IAAA,IAAI,EAAC;AAApB,kBAvBF,CADF,CADF;AA6BD,CA7CD;;GAAMlB,S;UACYN,O,EACDE,S;;;KAFXI,S;AA+CN,eAAeA,SAAf","sourcesContent":["import React from 'react';\nimport { useForm, FormProvider } from 'react-hook-form';\nimport { useRouter } from 'next/router';\n\nimport InputText from '../common/InputText/InputText';\nimport PrimaryButton from '../common/Button/PrimaryButton';\n\nimport { userData } from '../../utlis/utils';\n\nconst LoginForm = () => {\n  const methods = useForm();\n  const router = useRouter()\n\n  const onSubmit = (data) => {\n    //comparing the Form login information with hardcoded user information\n    debugger;\n    if(userData.emailId.toLowerCase() === data.emailID && userData.password === data.password) {\n      //IF true set the localstorage token\n      localStorage.setItem('accessToken', Math.random().toString(36));\n      return router.push('/dashboard');\n    } else {\n      alert(\"Login details incorrect\");\n    }\n  }\n\n  return (\n    <FormProvider {...methods}>\n      <form className=\"mx-auto self-center md:w-4/6 w-full p-20 grid grid-cols-1 gap-8 rounded overflow-hidden border-4 border-light-blue-500 border-opacity-25 shadow-lg\" onSubmit={methods.handleSubmit(onSubmit)}>\n      <h1 className=\"mx-auto uppercase text-purple-500 font-bold\"> Haligonia Dance Academy </h1>\n        <h2> Enter Login Information: </h2>\n        <InputText \n          type=\"text\" \n          label=\"Enter your Email ID\" \n          name=\"emailID\"\n          required=\"required\"\n          pattern={{\n            value: /\\S+@\\S+.\\S+/,\n            message: \"Entered value does not match email format\"\n          }}\n        />\n        <InputText \n          type=\"password\" \n          label=\"Enter your Password\" \n          name=\"password\"\n          required=\"required\"\n          minLength= {{\n            value: 5,\n            message: \"min length is 5\"\n          }}\n        />\n        <PrimaryButton type=\"submit\"> Continue </PrimaryButton>\n      </form>\n    </FormProvider>\n  );\n}\n\nexport default LoginForm"]},"metadata":{},"sourceType":"module"}