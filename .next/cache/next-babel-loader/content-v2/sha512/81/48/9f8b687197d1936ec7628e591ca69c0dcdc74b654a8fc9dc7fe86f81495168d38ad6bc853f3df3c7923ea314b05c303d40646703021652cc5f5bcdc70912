{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/rowengracious/DroneInsurance/my-test-app/src/components/common/InputText/InputText.js\";\nimport React from 'react';\nimport { useFormContext, Controller } from 'react-hook-form';\n\nconst InputText = ({\n  type,\n  label,\n  name,\n  validate\n}) => {\n  const methods = useFormContext();\n  const {\n    register,\n    formState: {\n      errors\n    },\n    control\n  } = methods;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"grid grid-cols-1 gap-3\",\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: name,\n      children: [\" \", label, \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Controller, {\n      as: /*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"border-2 h-10 p-2\",\n        id: name,\n        name: name,\n        type: type\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 11\n      }, this),\n      control: control,\n      name: name,\n      rules: {\n        validate: {\n          required: validate ? validate[0] : false,\n          custom: validate ? validate[1] : null\n        }\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 7\n    }, this), errors.email && /*#__PURE__*/_jsxDEV(\"span\", {\n      role: \"alert\",\n      children: errors.email.message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 24\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 9,\n    columnNumber: 5\n  }, this);\n};\n\nexport default InputText;","map":{"version":3,"sources":["/Users/rowengracious/DroneInsurance/my-test-app/src/components/common/InputText/InputText.js"],"names":["React","useFormContext","Controller","InputText","type","label","name","validate","methods","register","formState","errors","control","required","custom","email","message"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,cAAT,EAAyBC,UAAzB,QAA2C,iBAA3C;;AAEA,MAAMC,SAAS,GAAG,CAAC;AAACC,EAAAA,IAAD;AAAOC,EAAAA,KAAP;AAAcC,EAAAA,IAAd;AAAoBC,EAAAA;AAApB,CAAD,KAAmC;AACnD,QAAMC,OAAO,GAAGP,cAAc,EAA9B;AACA,QAAM;AAAEQ,IAAAA,QAAF;AAAYC,IAAAA,SAAS,EAAE;AAAEC,MAAAA;AAAF,KAAvB;AAAmCC,IAAAA;AAAnC,MAA+CJ,OAArD;AAEA,sBACE;AAAK,IAAA,SAAS,EAAC,wBAAf;AAAA,4BACE;AAAO,MAAA,OAAO,EAAEF,IAAhB;AAAA,sBAAwBD,KAAxB;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,UAAD;AACE,MAAA,EAAE,eACA;AACE,QAAA,SAAS,EAAC,mBADZ;AAEE,QAAA,EAAE,EAAEC,IAFN;AAGE,QAAA,IAAI,EAAEA,IAHR;AAIE,QAAA,IAAI,EAAEF;AAJR;AAAA;AAAA;AAAA;AAAA,cAFJ;AASE,MAAA,OAAO,EAAEQ,OATX;AAUE,MAAA,IAAI,EAAEN,IAVR;AAWE,MAAA,KAAK,EAAE;AAACC,QAAAA,QAAQ,EAAE;AACVM,UAAAA,QAAQ,EAAEN,QAAQ,GAAGA,QAAQ,CAAC,CAAD,CAAX,GAAiB,KADzB;AAEVO,UAAAA,MAAM,EAAEP,QAAQ,GAAGA,QAAQ,CAAC,CAAD,CAAX,GAAiB;AAFvB;AAAX;AAXT;AAAA;AAAA;AAAA;AAAA,YAFF,EAkBGI,MAAM,CAACI,KAAP,iBAAgB;AAAM,MAAA,IAAI,EAAC,OAAX;AAAA,gBAAoBJ,MAAM,CAACI,KAAP,CAAaC;AAAjC;AAAA;AAAA;AAAA;AAAA,YAlBnB;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAsBD,CA1BD;;AA4BA,eAAeb,SAAf","sourcesContent":["import React from 'react';\nimport { useFormContext, Controller } from 'react-hook-form';\n\nconst InputText = ({type, label, name, validate}) => {\n  const methods = useFormContext();\n  const { register, formState: { errors }, control } = methods;\n\n  return (\n    <div className=\"grid grid-cols-1 gap-3\">\n      <label htmlFor={name}> {label} </label>\n      <Controller\n        as={\n          <input\n            className=\"border-2 h-10 p-2\"\n            id={name} \n            name={name} \n            type={type}\n          />\n        }\n        control={control}\n        name={name}\n        rules={{validate: {\n                required: validate ? validate[0] : false,\n                custom: validate ? validate[1] : null\n              }}}\n      />\n      {errors.email && <span role=\"alert\">{errors.email.message}</span>}\n    </div>\n  )\n}\n\nexport default InputText\n"]},"metadata":{},"sourceType":"module"}