{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/rowengracious/DroneInsurance/my-test-app/src/components/Dashboard/Dashboard.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableFooter from '@material-ui/core/TableFooter';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport IconButton from '@material-ui/core/IconButton';\nimport FirstPageIcon from '@material-ui/icons/FirstPage';\nimport KeyboardArrowLeft from '@material-ui/icons/KeyboardArrowLeft';\nimport KeyboardArrowRight from '@material-ui/icons/KeyboardArrowRight';\nimport LastPageIcon from '@material-ui/icons/LastPage'; // import withAuth from '../../services/withAuth';\n\nconst useStyles1 = makeStyles(theme => ({\n  root: {\n    flexShrink: 0,\n    marginLeft: theme.spacing(2.5)\n  }\n}));\n\nfunction TablePaginationActions(props) {\n  const classes = useStyles1();\n  const theme = useTheme();\n  const {\n    count,\n    page,\n    rowsPerPage,\n    onChangePage\n  } = props;\n\n  const handleFirstPageButtonClick = event => {\n    onChangePage(event, 0);\n  };\n\n  const handleBackButtonClick = event => {\n    onChangePage(event, page - 1);\n  };\n\n  const handleNextButtonClick = event => {\n    onChangePage(event, page + 1);\n  };\n\n  const handleLastPageButtonClick = event => {\n    onChangePage(event, Math.max(0, Math.ceil(count / rowsPerPage) - 1));\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.root,\n    children: [/*#__PURE__*/_jsxDEV(IconButton, {\n      onClick: handleFirstPageButtonClick,\n      disabled: page === 0,\n      \"aria-label\": \"first page\",\n      children: theme.direction === 'rtl' ? /*#__PURE__*/_jsxDEV(LastPageIcon, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 38\n      }, this) : /*#__PURE__*/_jsxDEV(FirstPageIcon, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 57\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n      onClick: handleBackButtonClick,\n      disabled: page === 0,\n      \"aria-label\": \"previous page\",\n      children: theme.direction === 'rtl' ? /*#__PURE__*/_jsxDEV(KeyboardArrowRight, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 38\n      }, this) : /*#__PURE__*/_jsxDEV(KeyboardArrowLeft, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 63\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n      onClick: handleNextButtonClick,\n      disabled: page >= Math.ceil(count / rowsPerPage) - 1,\n      \"aria-label\": \"next page\",\n      children: theme.direction === 'rtl' ? /*#__PURE__*/_jsxDEV(KeyboardArrowLeft, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 38\n      }, this) : /*#__PURE__*/_jsxDEV(KeyboardArrowRight, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 62\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n      onClick: handleLastPageButtonClick,\n      disabled: page >= Math.ceil(count / rowsPerPage) - 1,\n      \"aria-label\": \"last page\",\n      children: theme.direction === 'rtl' ? /*#__PURE__*/_jsxDEV(FirstPageIcon, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 38\n      }, this) : /*#__PURE__*/_jsxDEV(LastPageIcon, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 58\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 5\n  }, this);\n}\n\nTablePaginationActions.propTypes = {\n  count: PropTypes.number.isRequired,\n  onChangePage: PropTypes.func.isRequired,\n  page: PropTypes.number.isRequired,\n  rowsPerPage: PropTypes.number.isRequired\n};\nconst useStyles2 = makeStyles({\n  table: {\n    minWidth: 500\n  }\n});\n\nfunction Dashboard() {\n  const classes = useStyles2();\n  const [page, setPage] = React.useState(0);\n  const [rowsPerPage, setRowsPerPage] = React.useState(5);\n  const [rows, setRows] = React.useState([]);\n  React.useEffect(() => {\n    fetch('https://randomuser.me/api/?results=50').then(response => {\n      if (response.ok) return response.json();\n      throw new Error('Request failed.');\n    }).then(data => {\n      setRows([...data.results]);\n    }).catch(error => {\n      console.log(error);\n    });\n  }, []);\n  const emptyRows = rows && rowsPerPage - Math.min(rowsPerPage, rows.length - page * rowsPerPage);\n\n  const handleChangePage = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  const handleChangeRowsPerPage = event => {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  };\n\n  return rows && /*#__PURE__*/_jsxDEV(TableContainer, {\n    component: Paper,\n    children: /*#__PURE__*/_jsxDEV(Table, {\n      className: classes.table,\n      \"aria-label\": \"custom pagination table\",\n      children: [/*#__PURE__*/_jsxDEV(TableBody, {\n        children: [/*#__PURE__*/_jsxDEV(TableRow, {\n          children: [/*#__PURE__*/_jsxDEV(TableCell, {\n            component: \"th\",\n            scope: \"row\",\n            children: \"Profile Image\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 128,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n            component: \"th\",\n            scope: \"row\",\n            children: \"Full Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 131,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n            component: \"th\",\n            scope: \"row\",\n            children: \"Age\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 134,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 11\n        }, this), (rowsPerPage > 0 ? rows.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage) : rows).map(row => /*#__PURE__*/_jsxDEV(TableRow, {\n          children: [console.log(row.name), /*#__PURE__*/_jsxDEV(TableCell, {\n            style: {\n              width: '50%'\n            },\n            children: /*#__PURE__*/_jsxDEV(\"img\", {\n              src: row.picture.large\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 145,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 144,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n            style: {\n              width: '25%'\n            },\n            align: \"center\",\n            children: [row.name.title, \" \", row.name.first, \" \", row.name.last]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 147,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n            style: {\n              width: '25%'\n            },\n            align: \"center\",\n            children: row.registered.age\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 150,\n            columnNumber: 17\n          }, this)]\n        }, row.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 15\n        }, this)), emptyRows > 0 && /*#__PURE__*/_jsxDEV(TableRow, {\n          style: {\n            height: 53 * emptyRows\n          },\n          children: /*#__PURE__*/_jsxDEV(TableCell, {\n            colSpan: 6\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 158,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 157,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TableFooter, {\n        children: /*#__PURE__*/_jsxDEV(TableRow, {\n          children: /*#__PURE__*/_jsxDEV(TablePagination, {\n            ActionsComponent: TablePaginationActions,\n            count: rows.length,\n            page: page,\n            onChangePage: handleChangePage,\n            rowsPerPage: rowsPerPage,\n            onChangeRowsPerPage: handleChangeRowsPerPage\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 164,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 163,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 124,\n    columnNumber: 5\n  }, this);\n}\n\nexport default Dashboard;","map":{"version":3,"sources":["/Users/rowengracious/DroneInsurance/my-test-app/src/components/Dashboard/Dashboard.js"],"names":["React","PropTypes","makeStyles","useTheme","Table","TableBody","TableCell","TableContainer","TableFooter","TablePagination","TableRow","Paper","IconButton","FirstPageIcon","KeyboardArrowLeft","KeyboardArrowRight","LastPageIcon","useStyles1","theme","root","flexShrink","marginLeft","spacing","TablePaginationActions","props","classes","count","page","rowsPerPage","onChangePage","handleFirstPageButtonClick","event","handleBackButtonClick","handleNextButtonClick","handleLastPageButtonClick","Math","max","ceil","direction","propTypes","number","isRequired","func","useStyles2","table","minWidth","Dashboard","setPage","useState","setRowsPerPage","rows","setRows","useEffect","fetch","then","response","ok","json","Error","data","results","catch","error","console","log","emptyRows","min","length","handleChangePage","newPage","handleChangeRowsPerPage","parseInt","target","value","slice","map","row","name","width","picture","large","title","first","last","registered","age","id","height"],"mappings":"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","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableFooter from '@material-ui/core/TableFooter';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport IconButton from '@material-ui/core/IconButton';\nimport FirstPageIcon from '@material-ui/icons/FirstPage';\nimport KeyboardArrowLeft from '@material-ui/icons/KeyboardArrowLeft';\nimport KeyboardArrowRight from '@material-ui/icons/KeyboardArrowRight';\nimport LastPageIcon from '@material-ui/icons/LastPage';\n\n// import withAuth from '../../services/withAuth';\n\nconst useStyles1 = makeStyles((theme) => ({\n  root: {\n    flexShrink: 0,\n    marginLeft: theme.spacing(2.5),\n  },\n}));\n\nfunction TablePaginationActions(props) {\n  const classes = useStyles1();\n  const theme = useTheme();\n  const { count, page, rowsPerPage, onChangePage } = props;\n\n  const handleFirstPageButtonClick = (event) => {\n    onChangePage(event, 0);\n  };\n\n  const handleBackButtonClick = (event) => {\n    onChangePage(event, page - 1);\n  };\n\n  const handleNextButtonClick = (event) => {\n    onChangePage(event, page + 1);\n  };\n\n  const handleLastPageButtonClick = (event) => {\n    onChangePage(event, Math.max(0, Math.ceil(count / rowsPerPage) - 1));\n  };\n\n  return (\n    <div className={classes.root}>\n      <IconButton\n        onClick={handleFirstPageButtonClick}\n        disabled={page === 0}\n        aria-label=\"first page\"\n      >\n        {theme.direction === 'rtl' ? <LastPageIcon /> : <FirstPageIcon />}\n      </IconButton>\n      <IconButton onClick={handleBackButtonClick} disabled={page === 0} aria-label=\"previous page\">\n        {theme.direction === 'rtl' ? <KeyboardArrowRight /> : <KeyboardArrowLeft />}\n      </IconButton>\n      <IconButton\n        onClick={handleNextButtonClick}\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n        aria-label=\"next page\"\n      >\n        {theme.direction === 'rtl' ? <KeyboardArrowLeft /> : <KeyboardArrowRight />}\n      </IconButton>\n      <IconButton\n        onClick={handleLastPageButtonClick}\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n        aria-label=\"last page\"\n      >\n        {theme.direction === 'rtl' ? <FirstPageIcon /> : <LastPageIcon />}\n      </IconButton>\n    </div>\n  );\n}\n\nTablePaginationActions.propTypes = {\n  count: PropTypes.number.isRequired,\n  onChangePage: PropTypes.func.isRequired,\n  page: PropTypes.number.isRequired,\n  rowsPerPage: PropTypes.number.isRequired,\n};\n\nconst useStyles2 = makeStyles({\n  table: {\n    minWidth: 500,\n  },\n});\n\nfunction Dashboard() {\n  const classes = useStyles2();\n  const [page, setPage] = React.useState(0);\n  const [rowsPerPage, setRowsPerPage] = React.useState(5);\n  const [rows, setRows] = React.useState([]);\n\n  React.useEffect(() => {\n    fetch('https://randomuser.me/api/?results=50')\n    .then(response => {\n      if(response.ok) return response.json();\n      throw new Error('Request failed.');\n    })\n    .then(data => {\n      setRows([...data.results]);\n    })\n    .catch(error => {\n      console.log(error);\n    });\n  }, []);\n\n  \n  const emptyRows = rows && rowsPerPage - Math.min(rowsPerPage, rows.length - page * rowsPerPage);\n\n  const handleChangePage = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  const handleChangeRowsPerPage = (event) => {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  };\n\n  return rows && (\n    <TableContainer component={Paper}>\n      <Table className={classes.table} aria-label=\"custom pagination table\">\n        <TableBody>\n          <TableRow>\n            <TableCell component=\"th\" scope=\"row\">\n              Profile Image\n            </TableCell>\n            <TableCell component=\"th\" scope=\"row\">\n              Full Name\n            </TableCell>\n            <TableCell component=\"th\" scope=\"row\">\n              Age\n            </TableCell>\n          </TableRow>\n          {(rowsPerPage > 0\n            ? rows.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\n            : rows\n          ).map((row) => (\n              <TableRow key={row.id}>\n                {console.log(row.name)}\n                <TableCell style={{ width: '50%' }}>\n                  <img src={row.picture.large} />\n                </TableCell>\n                <TableCell style={{ width: '25%' }} align=\"center\">\n                  {row.name.title} {row.name.first} {row.name.last}\n                </TableCell>\n                <TableCell style={{ width: '25%' }} align=\"center\">\n                  {row.registered.age}\n                </TableCell>\n              </TableRow>\n          ))}\n\n          {emptyRows > 0 && (\n            <TableRow style={{ height: 53 * emptyRows }}>\n              <TableCell colSpan={6} />\n            </TableRow>\n          )}\n        </TableBody>\n        <TableFooter>\n          <TableRow>\n            <TablePagination\n              ActionsComponent={TablePaginationActions}\n              count={rows.length}\n              page={page}\n              onChangePage={handleChangePage}\n              rowsPerPage={rowsPerPage}\n              onChangeRowsPerPage={handleChangeRowsPerPage}\n            />\n          </TableRow>\n        </TableFooter>\n      </Table>\n    </TableContainer>\n  );\n}\n\nexport default Dashboard;"]},"metadata":{},"sourceType":"module"}