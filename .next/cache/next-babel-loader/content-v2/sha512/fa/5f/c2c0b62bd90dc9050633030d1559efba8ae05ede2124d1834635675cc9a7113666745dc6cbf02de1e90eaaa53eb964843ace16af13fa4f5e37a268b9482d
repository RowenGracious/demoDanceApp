{"ast":null,"code":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport React from 'react';\nimport { useFormContext } from 'react-hook-form'; //Reusuable input text component\n\nvar InputText = function InputText(_ref) {\n  var type = _ref.type,\n      label = _ref.label,\n      name = _ref.name,\n      required = _ref.required,\n      pattern = _ref.pattern,\n      minLength = _ref.minLength;\n  var methods = useFormContext();\n  var register = methods.register,\n      errors = methods.formState.errors;\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"grid grid-cols-1 gap-3\"\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: name\n  }, \" \", label, \" \"), /*#__PURE__*/React.createElement(\"input\", _extends({\n    className: \"border-2 h-10 p-2\",\n    id: name,\n    name: name,\n    type: type\n  }, register(name, {\n    required: required && required,\n    pattern: pattern && pattern,\n    minLength: minLength && minLength\n  }))), errors[name] && /*#__PURE__*/React.createElement(\"span\", {\n    className: \"text-red-500\",\n    role: \"alert\"\n  }, errors[name].message));\n};\n\nexport default InputText;","map":null,"metadata":{},"sourceType":"module"}