{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/rowengracious/DroneInsurance/my-test-app/src/components/common/InputText/InputText.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React from 'react';\nimport { useFormContext } from 'react-hook-form';\n\nconst InputText = ({\n  type,\n  label,\n  name,\n  required,\n  pattern\n}) => {\n  const methods = useFormContext();\n  const {\n    register,\n    formState: {\n      errors\n    }\n  } = methods;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"grid grid-cols-1 gap-3\",\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: name,\n      children: [\" \", label, \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", _objectSpread({\n      className: \"border-2 h-10 p-2\",\n      id: name,\n      name: name,\n      type: type\n    }, register(name, {\n      required: required,\n      pattern: pattern\n    })), void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 7\n    }, this), console.log(errors)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 9,\n    columnNumber: 5\n  }, this);\n};\n\nexport default InputText;","map":{"version":3,"sources":["/Users/rowengracious/DroneInsurance/my-test-app/src/components/common/InputText/InputText.js"],"names":["React","useFormContext","InputText","type","label","name","required","pattern","methods","register","formState","errors","console","log"],"mappings":";;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,cAAT,QAA+B,iBAA/B;;AAEA,MAAMC,SAAS,GAAG,CAAC;AAACC,EAAAA,IAAD;AAAOC,EAAAA,KAAP;AAAcC,EAAAA,IAAd;AAAoBC,EAAAA,QAApB;AAA8BC,EAAAA;AAA9B,CAAD,KAA4C;AAC5D,QAAMC,OAAO,GAAGP,cAAc,EAA9B;AACA,QAAM;AAAEQ,IAAAA,QAAF;AAAYC,IAAAA,SAAS,EAAE;AAAEC,MAAAA;AAAF;AAAvB,MAAsCH,OAA5C;AAEA,sBACE;AAAK,IAAA,SAAS,EAAC,wBAAf;AAAA,4BACE;AAAO,MAAA,OAAO,EAAEH,IAAhB;AAAA,sBAAwBD,KAAxB;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AACE,MAAA,SAAS,EAAC,mBADZ;AAEE,MAAA,EAAE,EAAEC,IAFN;AAGE,MAAA,IAAI,EAAEA,IAHR;AAIE,MAAA,IAAI,EAAEF;AAJR,OAKMM,QAAQ,CAACJ,IAAD,EAAM;AAChBC,MAAAA,QAAQ,EAAEA,QADM;AAEhBC,MAAAA,OAAO,EAAEA;AAFO,KAAN,CALd;AAAA;AAAA;AAAA;AAAA,YAFF,EAYGK,OAAO,CAACC,GAAR,CAAYF,MAAZ,CAZH;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAiBD,CArBD;;AAuBA,eAAeT,SAAf","sourcesContent":["import React from 'react';\nimport { useFormContext } from 'react-hook-form';\n\nconst InputText = ({type, label, name, required, pattern}) => {\n  const methods = useFormContext();\n  const { register, formState: { errors } } = methods;\n  \n  return (\n    <div className=\"grid grid-cols-1 gap-3\">\n      <label htmlFor={name}> {label} </label>\n      <input\n        className=\"border-2 h-10 p-2\"\n        id={name} \n        name={name} \n        type={type}\n        {...register(name,{\n          required: required,\n          pattern: pattern\n        })} \n      />\n      {console.log(errors)}\n      {/* {errors.email && <span role=\"alert\">{errors.message}</span>} */}\n    </div>\n  )\n}\n\nexport default InputText\n"]},"metadata":{},"sourceType":"module"}