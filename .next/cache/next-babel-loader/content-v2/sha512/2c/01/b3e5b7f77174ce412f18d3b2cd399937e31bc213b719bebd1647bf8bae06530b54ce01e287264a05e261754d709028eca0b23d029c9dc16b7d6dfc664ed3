{"ast":null,"code":"import React from 'react';\nimport { useForm, FormProvider } from 'react-hook-form';\nimport { useRouter } from 'next/router';\nimport InputText from '../common/InputText/InputText';\nimport PrimaryButton from '../common/Button/PrimaryButton';\nimport { userData } from '../../utlis/utils';\n\nvar LoginForm = function LoginForm() {\n  var methods = useForm();\n  var router = useRouter();\n\n  var onSubmit = function onSubmit(data) {\n    if (userData.emailId === data.emailID && userData.password === data.password) {\n      return router.push('/dashboard');\n    } else {\n      console.log('error 404');\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(FormProvider, methods, /*#__PURE__*/React.createElement(\"form\", {\n    className: \"mx-auto self-center md:w-3/6 w-full p-20 grid grid-cols-1 gap-8 rounded overflow-hidden border-4 border-light-blue-500 border-opacity-25 shadow-lg\",\n    onSubmit: methods.handleSubmit(onSubmit)\n  }, /*#__PURE__*/React.createElement(\"h2\", null, \" Enter Login Information \"), /*#__PURE__*/React.createElement(InputText, {\n    type: \"text\",\n    label: \"Enter your Email ID\",\n    name: \"emailID\",\n    required: \"required\",\n    pattern: {\n      value: /\\S+@\\S+.\\S+/,\n      message: \"Entered value does not match email format\"\n    }\n  }), /*#__PURE__*/React.createElement(InputText, {\n    type: \"password\",\n    label: \"Enter your Password\",\n    name: \"password\",\n    required: \"required\",\n    minLength: {\n      value: 5,\n      message: \"min length is 5\"\n    }\n  }), /*#__PURE__*/React.createElement(PrimaryButton, {\n    type: \"submit\"\n  }, \" Continue \")));\n};\n\nexport default LoginForm;","map":{"version":3,"sources":["/Users/rowengracious/DroneInsurance/my-test-app/src/components/LoginForm/LoginForm.js"],"names":["React","useForm","FormProvider","useRouter","InputText","PrimaryButton","userData","LoginForm","methods","router","onSubmit","data","emailId","emailID","password","push","console","log","handleSubmit","value","message"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,EAAkBC,YAAlB,QAAsC,iBAAtC;AACA,SAASC,SAAT,QAA0B,aAA1B;AAEA,OAAOC,SAAP,MAAsB,+BAAtB;AACA,OAAOC,aAAP,MAA0B,gCAA1B;AAEA,SAASC,QAAT,QAAyB,mBAAzB;;AAEA,IAAMC,SAAS,GAAG,SAAZA,SAAY,GAAM;AACtB,MAAMC,OAAO,GAAGP,OAAO,EAAvB;AACA,MAAMQ,MAAM,GAAGN,SAAS,EAAxB;;AAEA,MAAMO,QAAQ,GAAG,SAAXA,QAAW,CAACC,IAAD,EAAU;AACzB,QAAGL,QAAQ,CAACM,OAAT,KAAqBD,IAAI,CAACE,OAA1B,IAAqCP,QAAQ,CAACQ,QAAT,KAAsBH,IAAI,CAACG,QAAnE,EAA6E;AAC3E,aAAOL,MAAM,CAACM,IAAP,CAAY,YAAZ,CAAP;AACD,KAFD,MAEO;AACLC,MAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ;AACD;AACF,GAND;;AAQA,sBACE,oBAAC,YAAD,EAAkBT,OAAlB,eACE;AAAM,IAAA,SAAS,EAAC,oJAAhB;AAAqK,IAAA,QAAQ,EAAEA,OAAO,CAACU,YAAR,CAAqBR,QAArB;AAA/K,kBACE,4DADF,eAEE,oBAAC,SAAD;AACE,IAAA,IAAI,EAAC,MADP;AAEE,IAAA,KAAK,EAAC,qBAFR;AAGE,IAAA,IAAI,EAAC,SAHP;AAIE,IAAA,QAAQ,EAAC,UAJX;AAKE,IAAA,OAAO,EAAE;AACPS,MAAAA,KAAK,EAAE,aADA;AAEPC,MAAAA,OAAO,EAAE;AAFF;AALX,IAFF,eAYE,oBAAC,SAAD;AACE,IAAA,IAAI,EAAC,UADP;AAEE,IAAA,KAAK,EAAC,qBAFR;AAGE,IAAA,IAAI,EAAC,UAHP;AAIE,IAAA,QAAQ,EAAC,UAJX;AAKE,IAAA,SAAS,EAAG;AACVD,MAAAA,KAAK,EAAE,CADG;AAEVC,MAAAA,OAAO,EAAE;AAFC;AALd,IAZF,eAsBE,oBAAC,aAAD;AAAe,IAAA,IAAI,EAAC;AAApB,kBAtBF,CADF,CADF;AA4BD,CAxCD;;AA0CA,eAAeb,SAAf","sourcesContent":["import React from 'react';\nimport { useForm, FormProvider } from 'react-hook-form';\nimport { useRouter } from 'next/router'\n\nimport InputText from '../common/InputText/InputText';\nimport PrimaryButton from '../common/Button/PrimaryButton';\n\nimport { userData } from '../../utlis/utils';\n\nconst LoginForm = () => {\n  const methods = useForm();\n  const router = useRouter()\n\n  const onSubmit = (data) => {\n    if(userData.emailId === data.emailID && userData.password === data.password) {\n      return router.push('/dashboard');\n    } else {\n      console.log('error 404');\n    }\n  }\n\n  return (\n    <FormProvider {...methods}>\n      <form className=\"mx-auto self-center md:w-3/6 w-full p-20 grid grid-cols-1 gap-8 rounded overflow-hidden border-4 border-light-blue-500 border-opacity-25 shadow-lg\" onSubmit={methods.handleSubmit(onSubmit)}>\n        <h2> Enter Login Information </h2>\n        <InputText \n          type=\"text\" \n          label=\"Enter your Email ID\" \n          name=\"emailID\"\n          required=\"required\"\n          pattern={{\n            value: /\\S+@\\S+.\\S+/,\n            message: \"Entered value does not match email format\"\n          }}\n        />\n        <InputText \n          type=\"password\" \n          label=\"Enter your Password\" \n          name=\"password\"\n          required=\"required\"\n          minLength= {{\n            value: 5,\n            message: \"min length is 5\"\n          }}\n        />\n        <PrimaryButton type=\"submit\"> Continue </PrimaryButton>\n      </form>\n    </FormProvider>\n  );\n}\n\nexport default LoginForm"]},"metadata":{},"sourceType":"module"}