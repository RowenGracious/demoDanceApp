{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/rowengracious/DroneInsurance/my-test-app/src/components/common/Pagination/Pagination.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableFooter from '@material-ui/core/TableFooter';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport TablePaginationActions from '../Pagination/TablePaginationActions';\nvar useStyles2 = makeStyles({\n  table: {\n    minWidth: 500\n  }\n});\nexport default function Pagination(_ref) {\n  _s();\n\n  var _this = this;\n\n  var rows = _ref.rows;\n  var classes = useStyles2();\n\n  var _useState = useState(2),\n      page = _useState[0],\n      setPage = _useState[1];\n\n  var _useState2 = useState(5),\n      rowsPerPage = _useState2[0],\n      setRowsPerPage = _useState2[1];\n\n  var emptyRows = rows && rowsPerPage - Math.min(rowsPerPage, rows.length - page * rowsPerPage);\n\n  var handleChangePage = function handleChangePage(event, newPage) {\n    setPage(newPage);\n  };\n\n  var handleChangeRowsPerPage = function handleChangeRowsPerPage(event) {\n    setRowsPerPage(parseInt(event.target.value, 5));\n    setPage(0);\n  };\n\n  return /*#__PURE__*/_jsxDEV(TableContainer, {\n    component: Paper,\n    children: /*#__PURE__*/_jsxDEV(Table, {\n      className: classes.table,\n      \"aria-label\": \"custom pagination table\",\n      children: [/*#__PURE__*/_jsxDEV(TableBody, {\n        children: [/*#__PURE__*/_jsxDEV(TableRow, {\n          children: [/*#__PURE__*/_jsxDEV(TableCell, {\n            component: \"th\",\n            scope: \"row\",\n            children: \"Profile Image\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n            component: \"th\",\n            scope: \"row\",\n            children: \"Full Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n            component: \"th\",\n            scope: \"row\",\n            align: \"center\",\n            children: \"Age\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 11\n        }, this), (rowsPerPage > 0 ? rows.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage) : rows).map(function (row) {\n          return /*#__PURE__*/_jsxDEV(TableRow, {\n            children: [/*#__PURE__*/_jsxDEV(TableCell, {\n              style: {\n                width: '50%'\n              },\n              children: /*#__PURE__*/_jsxDEV(\"img\", {\n                src: row.picture.large\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 56,\n                columnNumber: 19\n              }, _this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 55,\n              columnNumber: 17\n            }, _this), /*#__PURE__*/_jsxDEV(TableCell, {\n              style: {\n                width: '25%'\n              },\n              align: \"left\",\n              children: [row.name.title, \" \", row.name.first, \" \", row.name.last]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 58,\n              columnNumber: 17\n            }, _this), /*#__PURE__*/_jsxDEV(TableCell, {\n              style: {\n                width: '25%'\n              },\n              align: \"center\",\n              children: row.registered.age\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 61,\n              columnNumber: 17\n            }, _this)]\n          }, row.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 15\n          }, _this);\n        }), emptyRows > 0 && /*#__PURE__*/_jsxDEV(TableRow, {\n          style: {\n            height: 53 * emptyRows\n          },\n          children: /*#__PURE__*/_jsxDEV(TableCell, {\n            colSpan: 6\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TableFooter, {\n        children: /*#__PURE__*/_jsxDEV(TableRow, {\n          children: /*#__PURE__*/_jsxDEV(TablePagination, {\n            className: \"div\",\n            rowsPerPageOptions: [5, 10, 25, {\n              label: 'All',\n              value: -1\n            }],\n            colSpan: 3,\n            count: rows.length,\n            rowsPerPage: rowsPerPage,\n            page: page,\n            SelectProps: {\n              inputProps: {\n                'aria-label': 'rows per page'\n              },\n              \"native\": true\n            },\n            onChangePage: handleChangePage,\n            onChangeRowsPerPage: handleChangeRowsPerPage,\n            ActionsComponent: TablePaginationActions\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Pagination, \"tWbW8b92nfozmzloxT4uHO0PDFU=\", false, function () {\n  return [useStyles2];\n});\n\n_c = Pagination;\n\nvar _c;\n\n$RefreshReg$(_c, \"Pagination\");","map":{"version":3,"sources":["/Users/rowengracious/DroneInsurance/my-test-app/src/components/common/Pagination/Pagination.js"],"names":["React","useState","makeStyles","Table","TableBody","TableCell","TableContainer","TableFooter","TablePagination","TableRow","Paper","TablePaginationActions","useStyles2","table","minWidth","Pagination","rows","classes","page","setPage","rowsPerPage","setRowsPerPage","emptyRows","Math","min","length","handleChangePage","event","newPage","handleChangeRowsPerPage","parseInt","target","value","slice","map","row","width","picture","large","name","title","first","last","registered","age","id","height","label","inputProps"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableFooter from '@material-ui/core/TableFooter';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport TablePaginationActions from '../Pagination/TablePaginationActions'\n\nconst useStyles2 = makeStyles({\n  table: {\n    minWidth: 500,\n  },\n});\n\nexport default function Pagination({rows}) {\n  const classes = useStyles2();\n  const [page, setPage] = useState(2);\n  const [rowsPerPage, setRowsPerPage] = useState(5);\n\n  const emptyRows = rows && rowsPerPage - Math.min(rowsPerPage, rows.length - page * rowsPerPage);\n\n  const handleChangePage = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  const handleChangeRowsPerPage = (event) => {\n    setRowsPerPage(parseInt(event.target.value, 5));\n    setPage(0);\n  };\n\n  return (\n    <TableContainer component={Paper}>\n      <Table className={classes.table} aria-label=\"custom pagination table\">\n        <TableBody>\n          <TableRow>\n            <TableCell component=\"th\" scope=\"row\">\n              Profile Image\n            </TableCell>\n            <TableCell component=\"th\" scope=\"row\">\n              Full Name\n            </TableCell>\n            <TableCell component=\"th\" scope=\"row\" align=\"center\">\n              Age\n            </TableCell>\n          </TableRow>\n          {(rowsPerPage > 0\n            ? rows.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\n            : rows\n          ).map((row) => (\n              <TableRow key={row.id}>\n                <TableCell style={{ width: '50%' }}>\n                  <img src={row.picture.large} />\n                </TableCell>\n                <TableCell style={{ width: '25%' }} align=\"left\">\n                  {row.name.title} {row.name.first} {row.name.last}\n                </TableCell>\n                <TableCell style={{ width: '25%' }} align=\"center\">\n                  {row.registered.age}\n                </TableCell>\n              </TableRow>\n          ))}\n\n          {emptyRows > 0 && (\n            <TableRow style={{ height: 53 * emptyRows }}>\n              <TableCell colSpan={6} />\n            </TableRow>\n          )}\n        </TableBody>\n        <TableFooter>\n          <TableRow>\n            <TablePagination\n                className=\"div\"\n                rowsPerPageOptions={[5, 10, 25, { label: 'All', value: -1 }]}\n                colSpan={3}\n                count={rows.length}\n                rowsPerPage={rowsPerPage}\n                page={page}\n                SelectProps={{\n                  inputProps: { 'aria-label': 'rows per page' },\n                  native: true,\n                }}\n                onChangePage={handleChangePage}\n                onChangeRowsPerPage={handleChangeRowsPerPage}\n                ActionsComponent={TablePaginationActions}\n              />\n          </TableRow>\n        </TableFooter>\n      </Table>\n    </TableContainer>\n  )\n}"]},"metadata":{},"sourceType":"module"}