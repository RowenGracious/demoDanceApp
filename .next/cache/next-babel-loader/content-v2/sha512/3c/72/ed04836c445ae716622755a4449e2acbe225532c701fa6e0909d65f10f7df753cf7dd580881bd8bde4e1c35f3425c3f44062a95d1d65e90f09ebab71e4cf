{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/rowengracious/DroneInsurance/my-test-app/src/services/withAuth.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { useRouter } from \"next/router\";\n\nconst withAuth = WrappedComponent => {\n  return props => {\n    // checks whether we are on client / browser or server.\n    if (false) {\n      const Router = useRouter();\n      const accessToken = localStorage.getItem(\"accessToken\");\n      console.log(accessToken); // If there is no access token we redirect to \"/\" page.\n\n      if (!accessToken) {\n        Router.replace(\"/\");\n        return null;\n      } // If this is an accessToken we just render the component that was passed with all its props\n\n\n      return /*#__PURE__*/_jsxDEV(WrappedComponent, _objectSpread({}, props), void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 14\n      }, this);\n    } // If we are on server, return null\n\n\n    return null;\n  };\n};\n\nexport default withAuth;","map":{"version":3,"sources":["/Users/rowengracious/DroneInsurance/my-test-app/src/services/withAuth.js"],"names":["useRouter","withAuth","WrappedComponent","props","Router","accessToken","localStorage","getItem","console","log","replace"],"mappings":";;;;;;;;;AAAA,SAASA,SAAT,QAA0B,aAA1B;;AAEA,MAAMC,QAAQ,GAAIC,gBAAD,IAAsB;AACrC,SAAQC,KAAD,IAAW;AAChB;AACA,eAAmC;AACjC,YAAMC,MAAM,GAAGJ,SAAS,EAAxB;AAEA,YAAMK,WAAW,GAAGC,YAAY,CAACC,OAAb,CAAqB,aAArB,CAApB;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAYJ,WAAZ,EAJiC,CAKjC;;AACA,UAAI,CAACA,WAAL,EAAkB;AAChBD,QAAAA,MAAM,CAACM,OAAP,CAAe,GAAf;AACA,eAAO,IAAP;AACD,OATgC,CAWjC;;;AAEA,0BAAO,QAAC,gBAAD,oBAAsBP,KAAtB;AAAA;AAAA;AAAA;AAAA,cAAP;AACD,KAhBe,CAkBhB;;;AACA,WAAO,IAAP;AACD,GApBD;AAqBD,CAtBD;;AAwBA,eAAeF,QAAf","sourcesContent":["import { useRouter } from \"next/router\";\n\nconst withAuth = (WrappedComponent) => {\n  return (props) => {\n    // checks whether we are on client / browser or server.\n    if (typeof window !== \"undefined\") {\n      const Router = useRouter();\n\n      const accessToken = localStorage.getItem(\"accessToken\");\n      console.log(accessToken);\n      // If there is no access token we redirect to \"/\" page.\n      if (!accessToken) {\n        Router.replace(\"/\");\n        return null;\n      }\n\n      // If this is an accessToken we just render the component that was passed with all its props\n\n      return <WrappedComponent {...props} />;\n    }\n\n    // If we are on server, return null\n    return null;\n  };\n};\n\nexport default withAuth;"]},"metadata":{},"sourceType":"module"}